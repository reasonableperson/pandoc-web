// Generated by CoffeeScript 1.6.3
(function() {
  var PORT, app, crypto, express, pandoc;

  express = require('express');

  app = express();

  app.use(require('stylus').middleware(__dirname + '/static'));

  app.set('views', __dirname + '/partials');

  app.engine('jade', require('jade').__express);

  app.use(express["static"](__dirname + '/static'));

  pandoc = require('pdc');

  app.use(express.bodyParser());

  PORT = 7793;

  app.listen(PORT);

  console.log('Express server listening on port ' + PORT + '.');

  app.get('/', function(req, res) {
    return res.render('edit.jade');
  });

  crypto = require('crypto');

  app.post('/render/pdf', function(req, res) {
    var filename, hash, key, md5, opts, templateVariables, val;
    console.log('REQUEST', req.body);
    md5 = crypto.createHash('md5');
    md5.update(req.body.markdown);
    hash = md5.digest('hex');
    filename = 'static/tmp/' + hash + '.pdf';
    opts = ['--latex-engine', 'xelatex', '--data-dir', 'tex', '--template', 'courtdoc', '-o', filename];
    templateVariables = {
      court: "In The Federal Court of Australia",
      title: "test",
      "party1-name": "Jarndyce",
      "party2-name": "Jarndyce"
    };
    for (key in templateVariables) {
      val = templateVariables[key];
      opts.push('-V');
      opts.push(key + '=' + val);
      console.log(key + '+' + val);
    }
    console.log('passing opts:', opts);
    return pandoc(req.body.markdown, 'markdown', 'latex', opts, function(err, result) {
      console.log(err, result, hash);
      if (err === null) {
        return res.send(hash);
      } else {
        return res.send(500, err);
      }
    });
  });

}).call(this);
